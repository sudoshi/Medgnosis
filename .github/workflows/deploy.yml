name: Deploy Medgnosis

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PHP_VERSION: '8.2'
  NODE_VERSION: '18'
  PRODUCTION_BRANCH: 'main'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Setup PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo
          
      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      # Install and build frontend
      - name: Build Frontend
        working-directory: frontend
        run: |
          npm ci
          npm run build
          
      # Install and build backend
      - name: Build Backend
        working-directory: backend
        run: |
          composer install --no-dev --optimize-autoloader
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache

      # Create production environment files
      - name: Create environment files
        run: |
          # Frontend production env
          echo "NEXT_PUBLIC_API_URL=https://demo.medgnosis.app/api" > frontend/.env.production
          echo "NEXT_PUBLIC_APP_URL=https://demo.medgnosis.app" >> frontend/.env.production
          
          # Backend production env
          cat > backend/.env.production << EOL
          APP_NAME="Population Health Platform"
          APP_ENV=production
          APP_DEBUG=false
          APP_URL=https://demo.medgnosis.app
          
          LOG_CHANNEL=stack
          LOG_LEVEL=error
          
          DB_CONNECTION=pgsql
          DB_HOST=localhost
          DB_PORT=5432
          DB_DATABASE=PHM
          DB_USERNAME=postgres
          DB_PASSWORD=acumenus
          DB_SCHEMA=prod
          
          CACHE_DRIVER=file
          SESSION_DRIVER=file
          SESSION_LIFETIME=120
          
          SANCTUM_STATEFUL_DOMAINS=demo.medgnosis.app
          SESSION_DOMAIN=.medgnosis.app
          EOL

      # Deploy to server
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: demo.medgnosis.app
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Stop services
            cd /var/www/Medgnosis
            [ -f stop.sh ] && ./stop.sh

            # Backup current version
            timestamp=$(date +%Y%m%d_%H%M%S)
            [ -d backend ] && mv backend backend_backup_$timestamp
            [ -d frontend ] && mv frontend frontend_backup_$timestamp

            # Deploy new version
            cp -r ${{ github.workspace }}/backend .
            cp -r ${{ github.workspace }}/frontend .
            
            # Set permissions
            sudo chown -R www-data:www-data .
            sudo chmod -R 755 .
            sudo chmod -R 775 backend/storage
            
            # Backend setup
            cd backend
            cp .env.production .env
            php artisan key:generate
            php artisan storage:link
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan migrate --force
            
            # Start services using PM2 for better process management
            cd /var/www/Medgnosis
            
            # Install PM2 if not already installed
            which pm2 || npm install -g pm2
            
            # Start backend
            pm2 start "php artisan serve --port=8000" --name="medgnosis-backend"
            
            # Start frontend
            cd frontend
            pm2 start "npm run start" --name="medgnosis-frontend"
            
            # Save PM2 process list
            pm2 save
            
            # Setup PM2 to start on system boot
            pm2 startup
